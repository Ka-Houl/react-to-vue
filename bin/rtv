#! /usr/bin/env node --harmony
'use strict'
var transform = require('../lib/index.js')
var path = require('path')
var fs = require('fs')
var chalk = require('chalk')

process.env.NODE_PATH = __dirname + '/../node_modules'
// 引入commander
const program = require('commander')

// 版本显示
program.version(require('../package').version)

// usage
program.usage('[options] file(react component)')

// ----------------------------------------
// options
// ----------------------------------------
program
  .option('-o --output [string]', 'the output file name')
  .option('-t --ts', 'it is a typescript component')
  .option('-f --flow', 'it is a component with Flow type annotations')
  .parse(process.argv)


if(!program.args.length){
  program.help()
} else {
  let filepath = program.args[0]
  filepath = path.resolve(process.cwd(), filepath)
  // check exists
  if (!fs.existsSync(filepath)) {
    console.log(chalk.red('file does not exist: ' + filepath))
    process.exit(0)
  }
  // load options
  let options = {}
  let arr = ['output', 'ts', 'flow']
  arr.forEach((item) => {
    program[item] !== undefined && (options[item] = program[item])
  })
  // load default option
  if (/.tsx?$/.test(filepath) && options.ts === undefined) {
    options.ts = true
  }
  // transform
  transform(filepath, options)
}